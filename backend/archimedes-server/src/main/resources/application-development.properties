# ===========================================================
# = Variables
# ===========================================================
variable.application.name=archimedes-server
variable.application.port=17593
variable.dir.data.root=to be filled
variable.database-server.host=to be filled
variable.database-server.port=to be filled
variable.database.name=to be filled
variable.database-server.username=to be filled
variable.database-server.password=to be filled
variable.auth.jwt.secret=to be filled
variable.auth.jwt.expires-in-hours=8
variable.audit.delete-local-files-in-n-days=28
variable.swagger-ui.enabled=true

# ===========================================================
# = Application name, port
# ===========================================================
spring.application.name=${variable.application.name}
server.port=${variable.application.port}

# ===========================================================
# = Local directory path assigned for data
# ===========================================================
private.dir.data.root=${variable.dir.data.root}

# ===========================================================
# = Application directories
# ===========================================================
# local directory path assigned for this project
private.dir.general.project=${private.dir.data.root}/${spring.application.name}
# assigned for download
private.dir.general.project.download=${private.dir.general.project}/download
# assigned for upload
private.dir.general.project.upload=${private.dir.general.project}/upload
# assigned for export
private.dir.general.project.export=${private.dir.general.project}/export
# assigned for logging
private.dir.general.project.logs=${private.dir.general.project}/logs
# assigned for plugins
private.dir.general.project.plugins=${private.dir.general.project}/plugins
# assigned for extract data file
private.dir.general.project.extract=${private.dir.general.project}/extract

# ===========================================================
# = logging directory
# ===========================================================
# LOG_PATH
logging.path=${private.dir.general.project.logs}
# LOG_FILE
logging.file=${spring.application.name}.log

# ===========================================================
# = Swagger Config
# ===========================================================
# https://springdoc.org/#faq
springdoc.swagger-ui.enabled=true
private.swagger.title=Archimedes Server
private.swagger.description=Archimedes Server API
private.swagger.contact.name=Cornerstones Engineering
private.swagger.contact.url=http://engineering.cornerstones.cc
private.swagger.contact.email=engineering@cornerstones.cc
private.swagger.version=${private.application.release}
private.swagger.license.name=Apache 2.0
private.swagger.license.url=http://www.cornerstones.cc

# ===========================================================
# = Data Source
# ===========================================================
spring.datasource.druid.url=jdbc:mysql://${variable.database-server.host}:${variable.database-server.port}/${variable.database.name}?\
  useSSL=false\
  &useUnicode=true\
  &characterEncoding=utf-8\
  &useJDBCCompliantTimezoneShift=true\
  &useLegacyDatetimeCode=false\
  &serverTimezone=GMT%2B8\
  &rewriteBatchedStatements=true
spring.datasource.druid.username=${variable.database-server.username}
spring.datasource.druid.password=${variable.database-server.password}
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.initial-size=50
spring.datasource.druid.max-active=500
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-wait=30000
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=true
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.validation-query=select 1
spring.datasource.druid.validation-query-timeout=34000
spring.datasource.druid.min-evictable-idle-time-millis=30000
spring.datasource.druid.max-evictable-idle-time-millis=55000
spring.datasource.druid.time-between-eviction-runs-millis=34000
spring.datasource.druid.log-abandoned=true
spring.datasource.druid.remove-abandoned=false
spring.datasource.druid.remove-abandoned-timeout=18000

# ===========================================================
# = JPA / HIBERNATE
# ===========================================================
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false

# ===========================================================
# = Spring Boot Application Management
# ===========================================================
management.endpoint.shutdown.enabled=true
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=*

# ===========================================================
# = Encryption of sensitive information
# ===========================================================
#jasypt.encryptor.password=cc.cornerstones

# ===========================================================
# = Authentication
# ===========================================================
private.auth.jwt.secret=${variable.auth.jwt.secret}
private.auth.jwt.expires-in-hours=${variable.auth.jwt.expires-in-hours}

# ===========================================================
# = Archive and Cleanup
# ===========================================================
# audit local files
private.audit.delete-local-files-exists-days=${variable.audit.delete-local-files-in-n-days}